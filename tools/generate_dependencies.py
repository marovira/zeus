import pathlib
import re


def generate_dependencies_file() -> None:
    """
    Generate a dependencies file located under <repo_dir>/dependencies.txt

    The purpose of the file is to provide a way for locking the CI caches to the versions
    of the packages used at any given time. The versions are read directly from the main
    CMakeLists.txt file located at the root of the project. This assumes that all
    dependencies are stored in variables of the form <name>_VERSION
    """
    script_path = pathlib.Path(__file__)
    repo_dir = script_path.parent.parent
    cmake_path = repo_dir / "CMakeLists.txt"
    script_relative = script_path.relative_to(repo_dir)
    header = [
        f"# Generated via {str(script_relative.as_posix())} and pre-commit hook.\n",
        "# Do not edit this file; modify CMakeLists.txt instead.\n",
    ]

    pattern = re.compile(r"set\([A-Z_]+\s\d+\.\d+\.\d+\)")
    sdk_versions: dict[str, str] = {}
    with cmake_path.open("r", encoding="utf-8") as infile:
        lines = infile.readlines()
        for line in lines:
            if pattern.match(line):
                line = line.strip()
                line = line.lstrip("set(")

                # Remove comments from the end of the line (if any)
                if "#" in line:
                    pos = line.index("#")
                    line = line[:pos]

                line = line.rstrip(") ")
                elems = line.split()
                assert len(elems) == 2
                sdk_versions[elems[0]] = elems[1]

    out_file = repo_dir / "dependencies.txt"
    with out_file.open("w+", encoding="utf-8", newline="\n") as outfile:
        outfile.writelines(header)
        for name, ver in sdk_versions.items():
            outfile.write(f"{name}=={ver}\n")


if __name__ == "__main__":
    generate_dependencies_file()
