name: GCC

on:
  push:
    branches: [ master ]
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - '.clang-format'
      - 'data/**'
  pull_request:
    branches: [ master ]
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - '.clang-format'
  workflow_dispatch:

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Linux GCC Debug",
            os: ubuntu-latest,
            build_type: "Debug",
            cc: "gcc-12",
            cxx: "g++-12"
          }
        - {
            name: "Linux GCC Release",
            os: ubuntu-latest,
            build_type: "Release",
            cc: "gcc-12",
            cxx: "g++-12"
          }
    steps:
      - uses: actions/checkout@v3

      - name: Cache dependencies
        uses: actions/cache@v3
        env:
          cache-name: zeus_deps
        with:
          path: ~/deps
          key: ${{ env.cache-name }}-gcc-${{ matrix.config.build_type }}

      - name: Install dependencies
        shell: bash
        env:
          BUILD_TYPE: ${{ matrix.config.build_type }}
          CC: ${{ matrix.config.cc }}
          CXX: ${{ matrix.config.cxx }}
        run: |
          if [ ! -d ~/deps ]; then
            git clone https://github.com/fmtlib/fmt.git --branch 9.1.0 --depth 1
            cmake -S fmt -B fmt/build -DCMAKE_CXX_STANDARD=20 -DFMT_INSTALL=ON -DFMT_TEST=OFF -DCMAKE_INSTALL_PREFIX=~/deps/fmt
            cd ./fmt/build
            make
            make install
            cd ../..
            git clone https://github.com/catchorg/Catch2.git --branch v3.3.2 --depth 1
            cmake -S Catch2 -B Catch2/build -DCMAKE_CXX_STANDARD=20 -DCATCH_INSTALL_DOCS=OFF -DCMAKE_INSTALL_PREFIX=~/deps/Catch2
            cd ./Catch2/build
            make
            make install
          fi

      - name: Build
        shell: bash
        env:
          BUILD_TYPE: ${{ matrix.config.build_type }}
          CC: ${{ matrix.config.cc }}
          CXX: ${{ matrix.config.cxx }}
        run: |
          cmake --preset=gcc -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_SHARED_LIBS=OFF -DCMAKE_PREFIX_PATH=~/deps
          cd ./build
          make

      - name: Test
        shell: bash
        working-directory: ./build
        env:
          CC: ${{ matrix.config.cc }}
          CXX: ${{ matrix.config.cxx }}
        run: |
          make test
